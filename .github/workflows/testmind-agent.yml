name: testmind-agent

on:
  pull_request:
    types: [opened, synchronize, reopened]
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      target_pr:
        description: "PR number to run against (e.g., 1)"
        required: true
        type: string
      command:
        description: "Agent command"
        required: false
        default: "plan+gen+run"
        type: string

jobs:
  run-agent:
    if: >
      github.event_name == 'pull_request' ||
      (github.event_name == 'issue_comment' && startsWith(github.event.comment.body, '/testmind')) ||
      github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      # Use Corepack so pnpm version comes from package.json: "packageManager"
      - name: Enable Corepack (pnpm)
        run: |
          corepack enable
          pnpm --version

      - name: Install deps
        run: pnpm i --frozen-lockfile

      # When manual run, synthesize an issue_comment payload for the runner
      - name: Prepare event payload (manual only)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo '{ "issue": { "number": '"${TARGET_PR}"' }, "comment": { "body": "/testmind '"${CMD}"'" } }' > event.json
          echo "GITHUB_EVENT_NAME=issue_comment" >> $GITHUB_ENV
          echo "GITHUB_EVENT_PATH=$GITHUB_WORKSPACE/event.json" >> $GITHUB_ENV
        env:
          TARGET_PR: ${{ inputs.target_pr }}
          CMD: ${{ inputs.command }}

      - name: Run TestMind Agent
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional GitHub App creds (if you use them)
          GITHUB_APP_ID: ${{ secrets.GITHUB_APP_ID }}
          GITHUB_APP_INSTALLATION_ID: ${{ secrets.GITHUB_APP_INSTALLATION_ID }}
          GITHUB_APP_PRIVATE_KEY_BASE64: ${{ secrets.GITHUB_APP_PRIVATE_KEY_BASE64 }}
          # Default token from Actions is fine
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm tsx apps/api/src/runner/bot.ts

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: ignore
