name: testmind-agent

on:
  pull_request:
    types: [opened, synchronize, reopened]
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      target_pr:
        description: "PR number to run against (e.g., 1)"
        required: true
        type: string
      command:
        description: "Agent command (e.g., plan+gen or plan+gen+run)"
        required: false
        default: "plan+gen"
        type: string

jobs:
  run-agent:
    runs-on: [self-hosted, Windows, X64]   # ðŸ‘ˆ explicitly mark Windows
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Enable Corepack (pnpm)
        shell: pwsh
        run: |
          corepack enable
          corepack prepare pnpm@9 --activate
          pnpm -v

      - name: Install deps
        shell: pwsh
        run: pnpm i --frozen-lockfile

      # For manual dispatch (not needed for PRs)
      - name: Prepare event payload (manual only)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        shell: pwsh
        run: |
          $json = '{ "issue": { "number": ' + $env:TARGET_PR + ' }, "comment": { "body": "/testmind ' + $env:CMD + '" } }'
          Set-Content -Path event.json -Value $json
          Add-Content -Path $env:GITHUB_ENV -Value "GITHUB_EVENT_NAME=issue_comment"
          Add-Content -Path $env:GITHUB_ENV -Value "GITHUB_EVENT_PATH=$env:GITHUB_WORKSPACE\event.json"
        env:
          TARGET_PR: ${{ inputs.target_pr }}
          CMD: ${{ inputs.command }}

      - name: Run TestMind Agent (local URL)
        shell: pwsh
        env:
          CI: true
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TEST_BASE_URL: "http://localhost:5173"
          RUN_TESTS: "true"
        run: pnpm tsx apps/api/src/runner/bot.ts

      # âœ… Use PowerShell instead of bash for Windows
      - name: Install Playwright browsers
        shell: pwsh
        run: |
          pnpm dlx playwright@latest install

      - name: Run Playwright tests (generated)
        shell: pwsh
        continue-on-error: true
        run: |
          if (Test-Path "testmind-generated\playwright.config.ts") {
            pnpm dlx playwright@latest test -c testmind-generated\playwright.config.ts --reporter=html
          } elseif (Test-Path "testmind-generated") {
            pnpm dlx playwright@latest test testmind-generated --reporter=html
          } else {
            pnpm dlx playwright@latest test --reporter=html
          }

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: error

      - name: Upload Playwright traces (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces
          path: test-results/**/*trace*.zip
          if-no-files-found: ignore
