"use strict";var P=Object.create;var p=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var H=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,N=Object.prototype.hasOwnProperty;var v=(e,t)=>{for(var r in t)p(e,r,{get:t[r],enumerable:!0})},c=(e,t,r,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of H(t))!N.call(e,o)&&o!==r&&p(e,o,{get:()=>t[o],enumerable:!(s=b(t,o))||s.enumerable});return e},i=(e,t,r)=>(c(e,t,"default"),r&&c(r,t,"default")),Y=(e,t,r)=>(r=e!=null?P(w(e)):{},c(t||!e||!e.__esModule?p(r,"default",{value:e,enumerable:!0}):r,e)),M=e=>c(p({},"__esModule",{value:!0}),e);var n={};v(n,{clerkClient:()=>f,clerkPlugin:()=>S,getAuth:()=>T});module.exports=M(n);i(n,require("@clerk/backend"),module.exports);var F=Y(require("fastify-plugin"));var m=["onRequest","preHandler"];var K=require("@clerk/backend/internal");var O=require("@clerk/backend");var E=require("@clerk/backend/internal"),y=require("@clerk/shared/apiUrlFromPublishableKey"),h=process.env.CLERK_API_VERSION||"v1",u=process.env.CLERK_SECRET_KEY||"",d=process.env.CLERK_MACHINE_SECRET_KEY||"",l=process.env.CLERK_PUBLISHABLE_KEY||"",A=process.env.CLERK_API_URL||(0,y.apiUrlFromPublishableKey)(l),R=process.env.CLERK_JWT_KEY||"",k={name:"@clerk/fastify",version:"2.4.36",environment:"production"},{Cookies:B,Headers:C}=E.constants;var f=(0,O.createClerkClient)({secretKey:u,machineSecretKey:d,apiUrl:A,apiVersion:h,jwtKey:R,userAgent:"@clerk/fastify@2.4.36",sdkMetadata:k});var _=e=>{let t=new Headers(Object.keys(e.headers).reduce((s,o)=>{let a=e.headers[o];return a&&(typeof a=="string"?s.set(o,a):s.set(o,a.join(","))),s},new Headers)),r=new URL(e.url||"",`${e.protocol}://clerk-dummy`);return new Request(r,{method:e.method,headers:t})};var g=e=>async(t,r)=>{let s=_(t),o=await f.authenticateRequest(s,{...e,secretKey:e.secretKey||u,publishableKey:e.publishableKey||l,acceptsToken:"any"});if(o.headers.forEach((I,q)=>r.header(q,I)),o.headers.get(C.Location))return r.code(307).send();if(o.status===K.AuthStatus.Handshake)throw new Error("Clerk: handshake status without redirect");t.auth=o.toAuth()};var j=(e,t,r)=>{e.decorateRequest("auth",null);let s=t.hookName||"preHandler";if(!m.includes(s))throw new Error(`Unsupported hookName: ${s}`);e.addHook(s,g(t)),r()},S=(0,F.default)(j,{name:"@clerk/fastify",fastify:"5.x"});var L=require("@clerk/backend/internal");var G=e=>`\u{1F512} Clerk: ${e.trim()}

For more info, check out the docs: https://clerk.com/docs,
or come say hi in our discord server: https://clerk.com/discord
`,x=G(`The "clerkPlugin" should be registered before using the "getAuth".
Example:

import { clerkPlugin } from '@clerk/fastify';

const server: FastifyInstance = Fastify({ logger: true });
server.register(clerkPlugin);
`);var T=(e,t)=>{let r=e;if(!r.auth)throw new Error(x);return(0,L.getAuthObjectForAcceptedToken)({authObject:r.auth,acceptsToken:t?.acceptsToken})};0&&(module.exports={clerkClient,clerkPlugin,getAuth,...require("@clerk/backend")});
//# sourceMappingURL=index.js.map